// Test generated by RoostGPT for test java-rest using AI Model gpt

package payroll;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.boot.test.context.SpringBootTest;

import java.util.Optional;

@SpringBootTest
public class EmployeeController_replaceEmployee125931cf10Test {

    @InjectMocks
    EmployeeController employeeController;

    @Mock
    EmployeeRepository repository;

    private Employee existingEmployee;
    private Employee newEmployee;

    @BeforeEach
    public void setup() {
        MockitoAnnotations.initMocks(this);

        existingEmployee = new Employee("John Doe", "developer");
        existingEmployee.setId(1L);

        newEmployee = new Employee("Jane Doe", "tester");
    }

    @Test
    public void testReplaceExistingEmployee() {
        when(repository.findById(1L)).thenReturn(Optional.of(existingEmployee));
        when(repository.save(any(Employee.class))).thenAnswer(i -> i.getArguments()[0]);

        Employee replacedEmployee = employeeController.replaceEmployee(newEmployee, 1L);

        verify(repository, times(1)).findById(1L);
        verify(repository, times(1)).save(any(Employee.class));

        assertEquals("Jane Doe", replacedEmployee.getName());
        assertEquals("tester", replacedEmployee.getRole());
    }

    @Test
    public void testReplaceNonExistingEmployee() {
        when(repository.findById(1L)).thenReturn(Optional.empty());
        when(repository.save(any(Employee.class))).thenAnswer(i -> i.getArguments()[0]);

        Employee replacedEmployee = employeeController.replaceEmployee(newEmployee, 1L);

        verify(repository, times(1)).findById(1L);
        verify(repository, times(1)).save(any(Employee.class));

        assertEquals("Jane Doe", replacedEmployee.getName());
        assertEquals("tester", replacedEmployee.getRole());
    }
}

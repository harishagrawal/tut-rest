// Test generated by RoostGPT for test java-rest using AI Model gpt

package payroll;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.mockito.Mockito.when;
import static org.springframework.hateoas.server.mvc.WebMvcLinkBuilder.linkTo;
import static org.springframework.hateoas.server.mvc.WebMvcLinkBuilder.methodOn;

import java.util.Optional;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.hateoas.EntityModel;

public class EmployeeController_oneee9dd05283Test {
    
    @InjectMocks
    private EmployeeController employeeController;
    
    @Mock
    private EmployeeRepository repository;
    
    @BeforeEach
    public void init() {
        MockitoAnnotations.initMocks(this);
    }
    
    @Test
    public void testOne_success() {
        Employee employee = new Employee("John Doe", "developer");
        employee.setId(1L);
        
        when(repository.findById(1L)).thenReturn(Optional.of(employee));
        
        EntityModel<Employee> result = employeeController.one(1L);
        
        assertEquals(employee, result.getContent());
        assertEquals(linkTo(methodOn(EmployeeController.class).one(1L)).withSelfRel(), result.getLink("self"));
        assertEquals(linkTo(methodOn(EmployeeController.class).all()).withRel("employees"), result.getLink("employees"));
    }
    
    @Test
    public void testOne_employeeNotFound() {
        when(repository.findById(1L)).thenReturn(Optional.empty());
        
        assertThrows(EmployeeNotFoundException.class, () -> {
            employeeController.one(1L);
        });
    }
}
